// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: rURT7PSYpAQNuaCGHJDPZg
// Component: UqAN3orjkq

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header from "../../Header"; // plasmic-import: 8weNktnDWmJHK/component
import Button from "../../Button"; // plasmic-import: 3c-nMnpAWfnFh/component
import Footer from "../../Footer"; // plasmic-import: VnNBHcpuRiqHc/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_w_3_hc_web.module.css"; // plasmic-import: rURT7PSYpAQNuaCGHJDPZg/projectcss
import sty from "./PlasmicGov.module.css"; // plasmic-import: UqAN3orjkq/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: QSJtYEMVjaEpvn/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: O9O6mz1RdnHmE8/icon

createPlasmicElementProxy;

export type PlasmicGov__VariantMembers = {};
export type PlasmicGov__VariantsArgs = {};
type VariantPropType = keyof PlasmicGov__VariantsArgs;
export const PlasmicGov__VariantProps = new Array<VariantPropType>();

export type PlasmicGov__ArgsType = {};
type ArgPropType = keyof PlasmicGov__ArgsType;
export const PlasmicGov__ArgProps = new Array<ArgPropType>();

export type PlasmicGov__OverridesType = {
  root?: Flex__<"div">;
  header?: Flex__<typeof Header>;
  h1?: Flex__<"h1">;
  h2?: Flex__<"h2">;
  button?: Flex__<typeof Button>;
  img?: Flex__<typeof PlasmicImg__>;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultGovProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicGov__RenderFunc(props: {
  variants: PlasmicGov__VariantsArgs;
  args: PlasmicGov__ArgsType;
  overrides: PlasmicGov__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicGov.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicGov.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicGov.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicGov.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicGov.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicGov.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicGov.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicGov.pageMetadata.ogImageSrc}
        />
        <link ref="canonical" href={PlasmicGov.pageMetadata.canonical} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__bFw8)}>
            <div className={classNames(projectcss.all, sty.freeBox__ns1Sy)}>
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link__lSUjQ
                      )}
                      component={Link}
                      href={"https://github.com/w3hc/gov"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {"Gov"}
                    </PlasmicLink__>
                  }
                  <React.Fragment> </React.Fragment>
                </React.Fragment>
              </h1>
              <h2
                data-plasmic-name={"h2"}
                data-plasmic-override={overrides.h2}
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "var(--token-u_cGwS23As82q0)" }}
                  >
                    {""}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link__bZnGo
                      )}
                      component={Link}
                      href={"https://github.com/w3hc/gov"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-u_cGwS23As82q0)" }}
                        >
                          {"DAOs for everyday people"}
                        </span>
                      </React.Fragment>
                    </PlasmicLink__>
                  }
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "var(--token-u_cGwS23As82q0)" }}
                  >
                    {" "}
                  </span>
                </React.Fragment>
              </h2>
              <div className={classNames(projectcss.all, sty.freeBox__t96W)}>
                <Button
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                  link={"https://gov-ui.netlify.app/"}
                  submitsForm={true}
                  target={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rcnIs
                    )}
                  >
                    {"Live demo"}
                  </div>
                </Button>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qubCd
                )}
              >
                {
                  "Gov is a DAO framework built with Open Zeppelin\u2019s Governor contract in combination with NFTs. It provides a coordination tool that fits the needs of everyday people.\n\nWe\u2019re inviting orgs, federations of orgs, activists, neighborhoods, stewards of the commons, collectives, and all communities to create their own DAO. The Web3 Hackers Collective has recently released the v0.10.0 of Gov. We want to run a series of pilots and focus on the impact evaluation process of each DAO."
                }
              </div>
              <PlasmicImg__
                data-plasmic-name={"img"}
                data-plasmic-override={overrides.img}
                alt={""}
                className={classNames(sty.img)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/w_3_hc_web/images/contractsExplainedpng.png",
                  fullWidth: 3140,
                  fullHeight: 2236,
                  aspectRatio: undefined
                }}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ozjyY
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link___630Vi
                      )}
                      component={Link}
                      href={"https://github.com/w3hc/gov"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {"GitHub repo (contracts)"}
                    </PlasmicLink__>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oDt41
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link__yqkq9
                      )}
                      component={Link}
                      href={"https://github.com/w3hc/gov-ui"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {"Gov UI GitHub repo"}
                    </PlasmicLink__>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__udFp
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link__ynmxc
                      )}
                      component={Link}
                      href={"https://github.com/w3hc/gov-deployer"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {"Gov Deployer"}
                    </PlasmicLink__>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__c9Ha8
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link__itrQ4
                      )}
                      component={Link}
                      href={"https://w3hc.github.io/gov-docs/"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {"Documentation"}
                    </PlasmicLink__>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dLmhx
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.link__odYMf
                      )}
                      component={Link}
                      href={"https://www.tally.xyz/gov/web3-hackers-collective"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      {"Example of a DAO on Tally "}
                    </PlasmicLink__>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
            </div>
          </div>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "header", "h1", "h2", "button", "img", "footer"],
  header: ["header"],
  h1: ["h1"],
  h2: ["h2"],
  button: ["button"],
  img: ["img"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  h1: "h1";
  h2: "h2";
  button: typeof Button;
  img: typeof PlasmicImg__;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicGov__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicGov__VariantsArgs;
    args?: PlasmicGov__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicGov__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicGov__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicGov__ArgProps,
          internalVariantPropNames: PlasmicGov__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicGov__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGov";
  } else {
    func.displayName = `PlasmicGov.${nodeName}`;
  }
  return func;
}

export const PlasmicGov = Object.assign(
  // Top-level PlasmicGov renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    h2: makeNodeComponent("h2"),
    button: makeNodeComponent("button"),
    img: makeNodeComponent("img"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicGov
    internalVariantProps: PlasmicGov__VariantProps,
    internalArgProps: PlasmicGov__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "W3HC - Gov",
      description:
        "We want to build integrations through mentoring and learning.",
      ogImageSrc:
        "https://site-assets.plasmic.app/16913ee9842ff1d4b5c32ddeb18c5be8.png",
      canonical: "https://w3hc.org/gov"
    }
  }
);

export default PlasmicGov;
/* prettier-ignore-end */
